services:
  db:
    image: pgvector/pgvector:pg15
    container_name: global-gate-db
    environment:
      POSTGRES_DB: global_gate
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qeqe
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d global_gate"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  app:
    build: .
    container_name: global-gate-app
    ports:
      - "8000:8000"  # FastAPI
      - "8501:8501"  # Streamlit (NEW)
    environment:
      - DB_HOST=db
      - DB_DATABASE=global_gate
      - DB_USER=postgres
      - DB_PASSWORD=qeqe
      - DB_OPENAI_API_KEY=dummy_key_for_testing
      - TRANSFORMERS_CACHE=/app/model_cache
      - HF_HOME=/app/model_cache
      - TORCH_HOME=/app/model_cache
      - HF_HUB_CACHE=/app/model_cache/hub
      - SENTENCE_TRANSFORMERS_HOME=/app/model_cache/sentence_transformers
      - OPENAI_API_KEY=${OPENAI_API_KEY}  # NEW: OpenAI API Key
    volumes:
      - model_cache:/app/model_cache
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
  model_cache: